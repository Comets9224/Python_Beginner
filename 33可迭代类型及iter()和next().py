#可迭代的对象：1.生成器 2.元组 列表 集合 字典 字符串
#如何判断一个对象是否是可迭代的？
from collections.abc import Iterable
list1=[1,4,5,8,7,8,6]
f=isinstance(list1,Iterable)#参数(x,A)  x是你传的  A 是元组 B 是列表
#以上函数可以用来检查是其类型和子类  Iterable应该是大类
print(f)

def task2(n):
    for i in range(n):
        print('正在听第{}首歌'.format(i))
        yield None
g=task2(5)   #往生成器里面传参数
f=isinstance(g,Iterable)
print(f)    #生成器也是一个可迭代的对象

"""
迭代器:重要特征,能被next调用,只能往前不能往后.
1.迭代是访问集合元素的一种方式。迭代器是一个可以记住遍历位置的对象。
2.迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。
3.迭代器只能往前不会后退。
4.可以被 next() 函数调用并不断返回下一个值的对象称为迭代器：Iterator。
5.可迭代不等价于迭代器
"""

list2=[1,2,3,4,5]   #之前有列表推导式变生成器的  那列表也能变迭代器  用next()
#print(next(list2))
#有没有方式，列表能够变成迭代器的？迭代器可以结合next用
list2=iter(list2)  #通过iter函数，将可迭代的，变成了迭代器
"""
生成器与迭代器的区别:
迭代器是大的范围，生成器是迭代器的一种
迭代器分为  生成器/  和列表元组转换来的迭代器

根本什么是迭代器:能被next()函数调用的，并不
断返回下一个元素的对象称为迭代器
"""